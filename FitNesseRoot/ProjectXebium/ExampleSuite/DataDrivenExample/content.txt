!2 This is an example of a scenario table that used for data-driven testing.
!3 Preparation;  In this example we use the Selenium Driver Fixture statements in a scenario. This requires the commands to be available. The Library table makes sure that happens.
| library |
| selenium driver fixture |

!3 Transforming a prerecorded script into a Scenario table, creating a new method "Open Page And Check"
| Scenario | open page | link | and check | used from |
| ensure | do | open | on | /@usedFrom |
| ensure | do | clickAndWait | on | link=@link|
| ensure | do | clickAndWait | on | link=Where Used |
| ensure | do | verifyTextPresent | on | @usedFrom |

!3 The actual test calling the scenario
| script |
| start browser | firefox | on url | http://localhost:${FITNESSE_PORT} |
| open Page | Fixture Code | and check | !-FitNesse.UserGuide-! |

!3 Finally the same scenario as a data table with multiple values.
| Open Page And Check |
| link | used from |
| Fixture Code | !-FitNesse.UserGuide-! |
| Test Systems | !-FitNesse.UserGuide-! |

!3 At the end of our test sequence closing the browser window
| script |
| stop browser |
